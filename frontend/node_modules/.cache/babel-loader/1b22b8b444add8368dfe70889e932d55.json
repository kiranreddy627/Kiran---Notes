{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/users'; // Register User\n\nconst register = async userData => {\n  const response = await axios.post(`${API_URL}/register`, userData);\n\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  }\n\n  return response.data;\n}; // Login User\n\n\nconst login = async userData => {\n  const response = await axios.post(`${API_URL}/login`, userData);\n\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  }\n\n  return response.data;\n}; // Logout User\n\n\nconst logout = () => {\n  localStorage.removeItem('user');\n};\n\nconst authService = {\n  register,\n  login,\n  logout\n};\nexport default authService;","map":{"version":3,"sources":["C:/Users/kiran/Downloads/MERN-Notes-App-main/Kiran - Notes/frontend/src/features/auth/authService.ts"],"names":["axios","API_URL","register","userData","response","post","data","localStorage","setItem","JSON","stringify","login","logout","removeItem","authService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,YAAhB,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,MAAOC,QAAP,IAA0D;AACzE,QAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAY,GAAEJ,OAAQ,WAAtB,EAAkCE,QAAlC,CAAvB;;AAEA,MAAIC,QAAQ,CAACE,IAAb,EAAmB;AACjBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACE,IAAxB,CAA7B;AACD;;AACD,SAAOF,QAAQ,CAACE,IAAhB;AACD,CAPD,C,CASA;;;AACA,MAAMK,KAAK,GAAG,MAAOR,QAAP,IAAuD;AACnE,QAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,IAAN,CAAY,GAAEJ,OAAQ,QAAtB,EAA+BE,QAA/B,CAAvB;;AAEA,MAAIC,QAAQ,CAACE,IAAb,EAAmB;AACjBC,IAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,SAAL,CAAeN,QAAQ,CAACE,IAAxB,CAA7B;AACD;;AACD,SAAOF,QAAQ,CAACE,IAAhB;AACD,CAPD,C,CASA;;;AACA,MAAMM,MAAM,GAAG,MAAM;AACnBL,EAAAA,YAAY,CAACM,UAAb,CAAwB,MAAxB;AACD,CAFD;;AAIA,MAAMC,WAAW,GAAG;AAClBZ,EAAAA,QADkB;AAElBS,EAAAA,KAFkB;AAGlBC,EAAAA;AAHkB,CAApB;AAMA,eAAeE,WAAf","sourcesContent":["import axios from 'axios';\n\nconst API_URL = '/api/users';\n\n// Register User\nconst register = async (userData: userRegister): Promise<User | string> => {\n  const response = await axios.post(`${API_URL}/register`, userData);\n\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  }\n  return response.data;\n};\n\n// Login User\nconst login = async (userData: userLogin): Promise<User | string> => {\n  const response = await axios.post(`${API_URL}/login`, userData);\n\n  if (response.data) {\n    localStorage.setItem('user', JSON.stringify(response.data));\n  }\n  return response.data;\n};\n\n// Logout User\nconst logout = () => {\n  localStorage.removeItem('user');\n};\n\nconst authService = {\n  register,\n  login,\n  logout,\n};\n\nexport default authService;\n"]},"metadata":{},"sourceType":"module"}