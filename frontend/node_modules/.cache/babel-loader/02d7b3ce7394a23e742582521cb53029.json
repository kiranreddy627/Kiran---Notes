{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiran\\\\Downloads\\\\MERN-Notes-App-main\\\\Kiran - Notes\\\\frontend\\\\src\\\\pages\\\\Dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppSelector, useAppDispatch } from '../app/hooks';\nimport { getNotes, reset } from '../features/notes/noteSlice';\nimport NoteForm from '../components/NoteForm';\nimport Loader from '../components/Loader';\nimport NoteList from '../components/NoteList';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [showAddNote, setShowAddNote] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const {\n    user\n  } = useAppSelector(state => state.auth);\n  const {\n    notes,\n    isLoading,\n    isError,\n    message\n  } = useAppSelector(state => state.notes);\n\n  const handleClick = () => {\n    setShowAddNote(prev => !prev);\n  };\n\n  useEffect(() => {\n    if (isError) {\n      console.log(message);\n      toast.error(message);\n    }\n\n    if (!user) {\n      navigate('/login');\n    }\n\n    dispatch(getNotes());\n    return () => {\n      dispatch(reset());\n    };\n  }, [navigate, dispatch, user, isError, message]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"flex flex-col items-center pt-8 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-4 text-2xl font-bold text-gray-800 font-lato\",\n        children: [\"Welcome \", user === null || user === void 0 ? void 0 : user.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-full py-1 mt-4 text-base font-semibold text-white capitalize bg-black rounded-md font-lato hover:bg-gray-800\",\n        onClick: handleClick,\n        children: showAddNote ? 'View Notes' : 'Add Note'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), showAddNote ? /*#__PURE__*/_jsxDEV(NoteForm, {\n      showFormFunc: setShowAddNote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : notes.length > 0 ? /*#__PURE__*/_jsxDEV(NoteList, {\n      notes: notes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mt-4 text-base font-bold text-gray-600 font-lato\",\n      children: \"You don't have any notes yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Dashboard, \"9YFZ193j50CtwU+LqjVk8y7/nrs=\", false, function () {\n  return [useNavigate, useAppDispatch, useAppSelector, useAppSelector];\n});\n\n_c = Dashboard;\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/kiran/Downloads/MERN-Notes-App-main/Kiran - Notes/frontend/src/pages/Dashboard.tsx"],"names":["React","useState","useEffect","useNavigate","useAppSelector","useAppDispatch","getNotes","reset","NoteForm","Loader","NoteList","toast","Dashboard","showAddNote","setShowAddNote","navigate","dispatch","user","state","auth","notes","isLoading","isError","message","handleClick","prev","console","log","error","name","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,cAA/C;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,6BAAhC;AAEA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AAEA,SAASC,KAAT,QAAsB,gBAAtB;;;AAEA,MAAMC,SAAmB,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMc,QAAQ,GAAGZ,WAAW,EAA5B;AACA,QAAMa,QAAQ,GAAGX,cAAc,EAA/B;AAEA,QAAM;AAAEY,IAAAA;AAAF,MAAWb,cAAc,CAAEc,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA/B;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,SAAT;AAAoBC,IAAAA,OAApB;AAA6BC,IAAAA;AAA7B,MAAyCnB,cAAc,CAC1Dc,KAAD,IAAWA,KAAK,CAACE,KAD0C,CAA7D;;AAIA,QAAMI,WAAW,GAAG,MAAM;AACxBV,IAAAA,cAAc,CAAEW,IAAD,IAAU,CAACA,IAAZ,CAAd;AACD,GAFD;;AAIAvB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIoB,OAAJ,EAAa;AACXI,MAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACAZ,MAAAA,KAAK,CAACiB,KAAN,CAAYL,OAAZ;AACD;;AAED,QAAI,CAACN,IAAL,EAAW;AACTF,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD;;AAEDC,IAAAA,QAAQ,CAACV,QAAQ,EAAT,CAAR;AAEA,WAAO,MAAM;AACXU,MAAAA,QAAQ,CAACT,KAAK,EAAN,CAAR;AACD,KAFD;AAGD,GAfQ,EAeN,CAACQ,QAAD,EAAWC,QAAX,EAAqBC,IAArB,EAA2BK,OAA3B,EAAoCC,OAApC,CAfM,CAAT;AAiBA,MAAIF,SAAJ,EAAe,oBAAO,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,UAAP;AAEf,sBACE;AAAS,IAAA,SAAS,EAAC,6CAAnB;AAAA,4BACE;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,iDAAd;AAAA,+BACWJ,IADX,aACWA,IADX,uBACWA,IAAI,CAAEY,IADjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AACE,QAAA,SAAS,EAAC,gHADZ;AAEE,QAAA,OAAO,EAAEL,WAFX;AAAA,kBAIGX,WAAW,GAAG,YAAH,GAAkB;AAJhC;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAaGA,WAAW,gBACV,QAAC,QAAD;AAAU,MAAA,YAAY,EAAEC;AAAxB;AAAA;AAAA;AAAA;AAAA,YADU,GAERM,KAAK,CAACU,MAAN,GAAe,CAAf,gBACF,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEV;AAAjB;AAAA;AAAA;AAAA;AAAA,YADE,gBAGF;AAAI,MAAA,SAAS,EAAC,kDAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CA3DD;;GAAMR,S;UAGaT,W,EACAE,c,EAEAD,c,EAC8BA,c;;;KAP3CQ,S;AA6DN,eAAeA,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppSelector, useAppDispatch } from '../app/hooks';\nimport { getNotes, reset } from '../features/notes/noteSlice';\n\nimport NoteForm from '../components/NoteForm';\nimport Loader from '../components/Loader';\nimport NoteList from '../components/NoteList';\n\nimport { toast } from 'react-toastify';\n\nconst Dashboard: React.FC = () => {\n  const [showAddNote, setShowAddNote] = useState(false);\n\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  const { user } = useAppSelector((state) => state.auth);\n  const { notes, isLoading, isError, message } = useAppSelector(\n    (state) => state.notes\n  );\n\n  const handleClick = () => {\n    setShowAddNote((prev) => !prev);\n  };\n\n  useEffect(() => {\n    if (isError) {\n      console.log(message);\n      toast.error(message);\n    }\n\n    if (!user) {\n      navigate('/login');\n    }\n\n    dispatch(getNotes());\n\n    return () => {\n      dispatch(reset());\n    };\n  }, [navigate, dispatch, user, isError, message]);\n\n  if (isLoading) return <Loader />;\n\n  return (\n    <section className=\"flex flex-col items-center pt-8 text-center\">\n      <div>\n        <h1 className=\"mb-4 text-2xl font-bold text-gray-800 font-lato\">\n          Welcome {user?.name}\n        </h1>\n        <button\n          className=\"w-full py-1 mt-4 text-base font-semibold text-white capitalize bg-black rounded-md font-lato hover:bg-gray-800\"\n          onClick={handleClick}\n        >\n          {showAddNote ? 'View Notes' : 'Add Note'}\n        </button>\n      </div>\n\n      {showAddNote ? (\n        <NoteForm showFormFunc={setShowAddNote} />\n      ) : notes.length > 0 ? (\n        <NoteList notes={notes} />\n      ) : (\n        <h3 className=\"mt-4 text-base font-bold text-gray-600 font-lato\">\n          You don't have any notes yet.\n        </h3>\n      )}\n    </section>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}