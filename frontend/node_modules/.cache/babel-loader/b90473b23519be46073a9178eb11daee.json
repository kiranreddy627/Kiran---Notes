{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/notes'; // Get user's notes\n\nconst getNotes = async token => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(API_URL, config);\n  return response.data;\n}; // Create a note\n\n\nconst createNote = async (noteData, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.post(API_URL, noteData, config);\n  return response.data;\n}; // TODO Update note feat\n// Delete a note\n\n\nconst deleteNote = async (id, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.delete(`${API_URL}/${id}`, config);\n  return response.data;\n};\n\nconst noteService = {\n  getNotes,\n  createNote,\n  deleteNote\n};\nexport default noteService;","map":{"version":3,"sources":["C:/Users/kiran/Downloads/MERN-Notes-App-main/Kiran - Notes/frontend/src/features/notes/noteService.ts"],"names":["axios","API_URL","getNotes","token","config","headers","Authorization","response","get","data","createNote","noteData","post","deleteNote","id","delete","noteService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,YAAhB,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,MAAOC,KAAP,IAAmD;AAClE,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADxB;AADI,GAAf;AAKA,QAAMI,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAUP,OAAV,EAAmBG,MAAnB,CAAvB;AAEA,SAAOG,QAAQ,CAACE,IAAhB;AACD,CATD,C,CAWA;;;AACA,MAAMC,UAAU,GAAG,OACjBC,QADiB,EAEjBR,KAFiB,KAGU;AAC3B,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADxB;AADI,GAAf;AAKA,QAAMI,QAAQ,GAAG,MAAMP,KAAK,CAACY,IAAN,CAAWX,OAAX,EAAoBU,QAApB,EAA8BP,MAA9B,CAAvB;AAEA,SAAOG,QAAQ,CAACE,IAAhB;AACD,CAZD,C,CAcA;AAEA;;;AACA,MAAMI,UAAU,GAAG,OACjBC,EADiB,EAEjBX,KAFiB,KAGe;AAChC,QAAMC,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACPC,MAAAA,aAAa,EAAG,UAASH,KAAM;AADxB;AADI,GAAf;AAKA,QAAMI,QAAQ,GAAG,MAAMP,KAAK,CAACe,MAAN,CAAc,GAAEd,OAAQ,IAAGa,EAAG,EAA9B,EAAiCV,MAAjC,CAAvB;AAEA,SAAOG,QAAQ,CAACE,IAAhB;AACD,CAZD;;AAcA,MAAMO,WAAW,GAAG;AAClBd,EAAAA,QADkB;AAElBQ,EAAAA,UAFkB;AAGlBG,EAAAA;AAHkB,CAApB;AAMA,eAAeG,WAAf","sourcesContent":["import axios from 'axios';\n\nconst API_URL = '/api/notes';\n\n// Get user's notes\nconst getNotes = async (token: string): Promise<Note[] | string> => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  };\n  const response = await axios.get(API_URL, config);\n\n  return response.data;\n};\n\n// Create a note\nconst createNote = async (\n  noteData: NewNoteType,\n  token: string\n): Promise<Note | string> => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  };\n  const response = await axios.post(API_URL, noteData, config);\n\n  return response.data;\n};\n\n// TODO Update note feat\n\n// Delete a note\nconst deleteNote = async (\n  id: string,\n  token: string\n): Promise<deleteResponseType> => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  };\n  const response = await axios.delete(`${API_URL}/${id}`, config);\n\n  return response.data;\n};\n\nconst noteService = {\n  getNotes,\n  createNote,\n  deleteNote,\n};\n\nexport default noteService;\n"]},"metadata":{},"sourceType":"module"}