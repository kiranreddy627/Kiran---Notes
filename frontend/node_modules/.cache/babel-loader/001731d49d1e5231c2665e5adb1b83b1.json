{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiran\\\\Downloads\\\\MERN-Notes-App-main\\\\Kiran - Notes\\\\frontend\\\\src\\\\pages\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../app/hooks';\nimport { useNavigate } from 'react-router-dom';\nimport { login, reset } from '../features/auth/authSlice';\nimport SubmitButton from '../components/SubmitButton';\nimport Loader from '../components/Loader';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [formData, setFormData] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = formData;\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n  const {\n    user,\n    isLoading,\n    isError,\n    isSuccess,\n    message\n  } = useAppSelector(state => state.auth);\n\n  const handleChange = e => {\n    setFormData(prev => ({ ...prev,\n      [e.target.name]: e.target.value\n    }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (email === '' || password === '') return toast.error('Please fill in the form!');else {\n      const userData = {\n        email,\n        password\n      };\n      dispatch(login(userData));\n    }\n  };\n\n  useEffect(() => {\n    if (isError) toast.error(message);\n\n    if (isSuccess || user) {\n      toast.success('Logged in successfully!');\n      navigate('/');\n    }\n\n    dispatch(reset());\n  }, [user, isError, isSuccess, message, navigate, dispatch]);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 25\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"flex flex-col items-center pt-20 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mb-4 text-2xl font-bold text-gray-800 font-lato\",\n      children: \"Log In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"mb-4 text-base font-bold text-gray-600 font-lato\",\n      children: \"Please login into your account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"w-80\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mb-2 text-base font-bold text-left text-gray-800 font-lato\",\n          htmlFor: \"email\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"p-1 mb-4 text-sm font-medium text-gray-800 border-2 border-gray-600 rounded-md font-lato placeholder:font-lato\",\n          type: \"email\",\n          value: email,\n          name: \"email\",\n          id: \"email\",\n          placeholder: \"Enter email\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mb-2 text-base font-bold text-left text-gray-800 font-lato\",\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"p-1 mb-4 text-sm font-medium text-gray-800 border-2 border-gray-600 rounded-md font-lato placeholder:font-lato\",\n          type: \"password\",\n          value: password,\n          name: \"password\",\n          id: \"password\",\n          placeholder: \"Enter password\",\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm font-bold text-left text-gray-500 font-lato\",\n        children: [\"Don't Have an Account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n          className: \"text-gray-700 underline hover:text-gray-900\",\n          to: \"/register\",\n          children: \"Register.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubmitButton, {\n        text: \"login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"SlDeLtZm/4WZZ4Eg4DoCVBm6m4s=\", false, function () {\n  return [useNavigate, useAppDispatch, useAppSelector];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/kiran/Downloads/MERN-Notes-App-main/Kiran - Notes/frontend/src/pages/Login.tsx"],"names":["React","useState","useEffect","Link","useAppDispatch","useAppSelector","useNavigate","login","reset","SubmitButton","Loader","toast","Login","formData","setFormData","email","password","navigate","dispatch","user","isLoading","isError","isSuccess","message","state","auth","handleChange","e","prev","target","name","value","handleSubmit","preventDefault","error","userData","success"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useAppDispatch, useAppSelector } from '../app/hooks';\nimport { useNavigate } from 'react-router-dom';\nimport { login, reset } from '../features/auth/authSlice';\n\nimport SubmitButton from '../components/SubmitButton';\nimport Loader from '../components/Loader';\n\nimport { toast } from 'react-toastify';\n\nconst Login: React.FC = () => {\n  const [formData, setFormData] = useState<userLogin>({\n    email: '',\n    password: '',\n  });\n\n  const { email, password } = formData;\n\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  const { user, isLoading, isError, isSuccess, message } = useAppSelector(\n    (state) => state.auth\n  );\n\n  const handleChange: React.ChangeEventHandler<HTMLInputElement> = (e) => {\n    setFormData((prev) => ({\n      ...prev,\n      [e.target.name]: e.target.value,\n    }));\n  };\n\n  const handleSubmit: React.FormEventHandler = (e) => {\n    e.preventDefault();\n    if (email === '' || password === '')\n      return toast.error('Please fill in the form!');\n    else {\n      const userData = {\n        email,\n        password,\n      };\n      dispatch(login(userData));\n    }\n  };\n\n  useEffect(() => {\n    if (isError) toast.error(message);\n\n    if (isSuccess || user) {\n      toast.success('Logged in successfully!');\n      navigate('/');\n    }\n\n    dispatch(reset());\n  }, [user, isError, isSuccess, message, navigate, dispatch]);\n\n  if (isLoading) return <Loader />;\n\n  return (\n    <section className=\"flex flex-col items-center pt-20 text-center\">\n      <h3 className=\"mb-4 text-2xl font-bold text-gray-800 font-lato\">\n        Log In\n      </h3>\n      <h4 className=\"mb-4 text-base font-bold text-gray-600 font-lato\">\n        Please login into your account\n      </h4>\n\n      <form className=\"w-80\" onSubmit={handleSubmit}>\n        <div className=\"flex flex-col\">\n          <label\n            className=\"mb-2 text-base font-bold text-left text-gray-800 font-lato\"\n            htmlFor=\"email\"\n          >\n            Email\n          </label>\n          <input\n            className=\"p-1 mb-4 text-sm font-medium text-gray-800 border-2 border-gray-600 rounded-md font-lato placeholder:font-lato\"\n            type=\"email\"\n            value={email}\n            name=\"email\"\n            id=\"email\"\n            placeholder=\"Enter email\"\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"flex flex-col\">\n          <label\n            className=\"mb-2 text-base font-bold text-left text-gray-800 font-lato\"\n            htmlFor=\"password\"\n          >\n            Password\n          </label>\n          <input\n            className=\"p-1 mb-4 text-sm font-medium text-gray-800 border-2 border-gray-600 rounded-md font-lato placeholder:font-lato\"\n            type=\"password\"\n            value={password}\n            name=\"password\"\n            id=\"password\"\n            placeholder=\"Enter password\"\n            onChange={handleChange}\n          />\n        </div>\n        <p className=\"text-sm font-bold text-left text-gray-500 font-lato\">\n          Don't Have an Account?{' '}\n          <Link\n            className=\"text-gray-700 underline hover:text-gray-900\"\n            to=\"/register\"\n          >\n            Register.\n          </Link>\n        </p>\n        <SubmitButton text=\"login\" />\n      </form>\n    </section>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}