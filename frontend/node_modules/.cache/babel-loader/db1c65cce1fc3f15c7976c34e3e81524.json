{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kiran\\\\Downloads\\\\MERN-Notes-App-main\\\\Kiran - Notes\\\\frontend\\\\src\\\\components\\\\NoteItem.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useAppSelector, useAppDispatch } from '../app/hooks';\nimport { deleteNote } from '../features/notes/noteSlice';\nimport { TrashIcon } from '@heroicons/react/solid';\nimport Loader from '../components/Loader';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getDate = isoString => {\n  const date = new Date(isoString);\n  return date.toLocaleDateString('en-GB'); // dd/mm/yyyy\n};\n\nconst NoteItem = _ref => {\n  _s();\n\n  let {\n    note\n  } = _ref;\n  const dispatch = useAppDispatch();\n  const {\n    isLoading,\n    isError,\n    message\n  } = useAppSelector(state => state.notes);\n\n  const handleDelete = id => {\n    dispatch(deleteNote(id));\n    toast.success('Note deleted!');\n  };\n\n  useEffect(() => {\n    if (isError) {\n      console.log(message);\n      toast.error(message);\n    }\n  }, [dispatch, isError, message]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-xl p-2 m-4 text-left bg-gray-100 rounded-md cursor-pointer w-60\",\n    children: !isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-1 text-xl font-bold text-gray-800 truncate font-lato\",\n        children: note.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-1 text-base font-semibold text-gray-400 truncate font-lato\",\n        children: note.desc ? note.desc : 'No description'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-base font-medium text-gray-600 font-lato\",\n          children: getDate(note.updatedAt)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(note._id),\n          children: /*#__PURE__*/_jsxDEV(TrashIcon, {\n            className: \"w-4 h-4 text-gray-600 hover:text-gray-800\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2 text-base font-semibold text-gray-700 font-lato\",\n        children: note.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n\n_s(NoteItem, \"eK0JxKGVac9YOzYa1smLXSn2tDg=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n\n_c = NoteItem;\nexport default NoteItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoteItem\");","map":{"version":3,"sources":["C:/Users/kiran/Downloads/MERN-Notes-App-main/Kiran - Notes/frontend/src/components/NoteItem.tsx"],"names":["React","useEffect","useAppSelector","useAppDispatch","deleteNote","TrashIcon","Loader","toast","getDate","isoString","date","Date","toLocaleDateString","NoteItem","note","dispatch","isLoading","isError","message","state","notes","handleDelete","id","success","console","log","error","title","desc","updatedAt","_id","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,cAA/C;AACA,SAASC,UAAT,QAA2B,6BAA3B;AAEA,SAASC,SAAT,QAA0B,wBAA1B;AAEA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;;;AAMA,MAAMC,OAAO,GAAIC,SAAD,IAA6B;AAC3C,QAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASF,SAAT,CAAb;AACA,SAAOC,IAAI,CAACE,kBAAL,CAAwB,OAAxB,CAAP,CAF2C,CAEF;AAC1C,CAHD;;AAKA,MAAMC,QAAyB,GAAG,QAAc;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC9C,QAAMC,QAAQ,GAAGZ,cAAc,EAA/B;AAEA,QAAM;AAAEa,IAAAA,SAAF;AAAaC,IAAAA,OAAb;AAAsBC,IAAAA;AAAtB,MAAkChB,cAAc,CACnDiB,KAAD,IAAWA,KAAK,CAACC,KADmC,CAAtD;;AAIA,QAAMC,YAAY,GAAIC,EAAD,IAAgB;AACnCP,IAAAA,QAAQ,CAACX,UAAU,CAACkB,EAAD,CAAX,CAAR;AACAf,IAAAA,KAAK,CAACgB,OAAN,CAAc,eAAd;AACD,GAHD;;AAKAtB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIgB,OAAJ,EAAa;AACXO,MAAAA,OAAO,CAACC,GAAR,CAAYP,OAAZ;AACAX,MAAAA,KAAK,CAACmB,KAAN,CAAYR,OAAZ;AACD;AACF,GALQ,EAKN,CAACH,QAAD,EAAWE,OAAX,EAAoBC,OAApB,CALM,CAAT;AAOA,sBACE;AAAK,IAAA,SAAS,EAAC,uEAAf;AAAA,cACG,CAACF,SAAD,gBACC;AAAA,8BACE;AAAI,QAAA,SAAS,EAAC,yDAAd;AAAA,kBACGF,IAAI,CAACa;AADR;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAI,QAAA,SAAS,EAAC,+DAAd;AAAA,kBACGb,IAAI,CAACc,IAAL,GAAYd,IAAI,CAACc,IAAjB,GAAwB;AAD3B;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAK,QAAA,SAAS,EAAC,wCAAf;AAAA,gCACE;AAAM,UAAA,SAAS,EAAC,+CAAhB;AAAA,oBACGpB,OAAO,CAACM,IAAI,CAACe,SAAN;AADV;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,OAAO,EAAE,MAAMR,YAAY,CAACP,IAAI,CAACgB,GAAN,CAAnC;AAAA,iCACE,QAAC,SAAD;AAAW,YAAA,SAAS,EAAC;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,eAeE;AAAK,QAAA,SAAS,EAAC,sDAAf;AAAA,kBACGhB,IAAI,CAACiB;AADR;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA,oBADD,gBAqBC,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAtBJ;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CA9CD;;GAAMlB,Q;UACaV,c,EAEuBD,c;;;KAHpCW,Q;AAgDN,eAAeA,QAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useAppSelector, useAppDispatch } from '../app/hooks';\nimport { deleteNote } from '../features/notes/noteSlice';\n\nimport { TrashIcon } from '@heroicons/react/solid';\n\nimport Loader from '../components/Loader';\nimport { toast } from 'react-toastify';\n\ntype Props = {\n  note: Note;\n};\n\nconst getDate = (isoString: Date): string => {\n  const date = new Date(isoString);\n  return date.toLocaleDateString('en-GB'); // dd/mm/yyyy\n};\n\nconst NoteItem: React.FC<Props> = ({ note }) => {\n  const dispatch = useAppDispatch();\n\n  const { isLoading, isError, message } = useAppSelector(\n    (state) => state.notes\n  );\n\n  const handleDelete = (id: string) => {\n    dispatch(deleteNote(id));\n    toast.success('Note deleted!');\n  };\n\n  useEffect(() => {\n    if (isError) {\n      console.log(message);\n      toast.error(message);\n    }\n  }, [dispatch, isError, message]);\n\n  return (\n    <div className=\"max-w-xl p-2 m-4 text-left bg-gray-100 rounded-md cursor-pointer w-60\">\n      {!isLoading ? (\n        <>\n          <h3 className=\"mb-1 text-xl font-bold text-gray-800 truncate font-lato\">\n            {note.title}\n          </h3>\n          <h4 className=\"mb-1 text-base font-semibold text-gray-400 truncate font-lato\">\n            {note.desc ? note.desc : 'No description'}\n          </h4>\n          <div className=\"flex items-center justify-between mb-2\">\n            <span className=\"text-base font-medium text-gray-600 font-lato\">\n              {getDate(note.updatedAt)}\n            </span>\n            <button onClick={() => handleDelete(note._id)}>\n              <TrashIcon className=\"w-4 h-4 text-gray-600 hover:text-gray-800\" />\n            </button>\n          </div>\n          <div className=\"mt-2 text-base font-semibold text-gray-700 font-lato\">\n            {note.text}\n          </div>\n        </>\n      ) : (\n        <Loader />\n      )}\n    </div>\n  );\n};\n\nexport default NoteItem;\n"]},"metadata":{},"sourceType":"module"}